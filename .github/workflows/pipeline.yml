name: Build and Deploy Docker Stak

on:
  push:
    branches: ['master']
    # This means "trigger on any push to the main branch."
    # Merging a PR to main is effectively a push event on main.

jobs:
  # 1) Build and push AMD64 image
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push AMD64 image
        run: |
          # Optionally set up buildx if you wish, or just use docker build for a single architecture
          docker buildx create --name builder --driver docker-container --use
          docker buildx inspect --bootstrap
          
          # Build and push just the AMD64 image
          docker buildx build \
            --platform linux/amd64 \
            -t ghcr.io/varadrane7/portfolio:amd64-latest \
            --push \
            .

  # 2) Build and push ARM64 image
  build-arm64:
    # Make sure your self-hosted runner has the label(s) "self-hosted" and "arm64"
    runs-on: [ self-hosted, arm64 ]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ARM64 image
        run: |
          docker buildx create --name builder --driver docker-container --use
          docker buildx inspect --bootstrap

          # Build and push just the ARM64 image
          docker buildx build \
            --platform linux/arm64 \
            -t ghcr.io/varadrane7/portfolio:arm64-latest \
            --push \
            .

  # 3) Create a multi-arch manifest
  create-manifest:
    runs-on: ubuntu-latest
    needs: [ build-amd64, build-arm64 ]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          # Pull down the already-pushed images or at least reference them
          # Then combine them under a single tag
          docker manifest create ghcr.io/varadrane7/portfolio:latest \
            --amend ghcr.io/varadrane7/portfolio:amd64-latest \
            --amend ghcr.io/varadrane7/portfolio:arm64-latest

          # Push the combined manifest
          docker manifest push ghcr.io/varadrane7/portfolio:latest

  deploy-to-vps:
    runs-on: self-hosted
    needs:
      - build-amd64
      - build-arm64
      - create-manifest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: create env file
      run: |
        echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile
    
    - name: Docker Stack Deploy
      uses: cssnr/stack-deploy-action@v1
      with:
        name: varad-portfolio
        file: docker-stack.yaml
        host: 150.230.235.239
        user: deploy
        ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        env_file: ./envfile

